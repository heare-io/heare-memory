[project]
name = "heare-memory"
version = "0.1.0"
description = "Global memory service for multi-agent environments with git-backed persistence"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Heare Memory Team", email = "memory@heare.ai" }
]
keywords = ["memory", "agents", "git", "fastapi", "rest"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.12"
dependencies = [
    # Core web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",

    # Configuration and data validation
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Git operations
    "gitpython>=3.1.40",

    # File operations and utilities
    "aiofiles>=23.2.1",

    # HTTP client for git operations
    "httpx>=0.25.0",

    # Async utilities
    "asyncio-mqtt>=0.13.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",

    # Code quality
    "ruff>=0.1.0",
    "autoflake>=2.2.0",
    "pre-commit>=3.5.0",

    # Development tools
    "mypy>=1.7.0",
    "black>=23.11.0",
    "isort>=5.12.0",

    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
]

[project.scripts]
heare-memory = "heare_memory.main:main"

[project.urls]
Homepage = "https://github.com/heare-ai/heare-memory"
Repository = "https://github.com/heare-ai/heare-memory"
Issues = "https://github.com/heare-ai/heare-memory/issues"
Documentation = "https://heare-memory.readthedocs.io/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/heare_memory"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=heare_memory",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "--strict-markers",
    "--disable-warnings",
    "-v"
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "S",  # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "LOG", # flake8-logging
]
ignore = [
    "S101", # Use of assert (we use it in tests)
    "S104", # Binding to all interfaces (needed for server)
    "B008", # Do not perform function calls in argument defaults
    "T201", # print found (we may use it for debugging)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106", "S107", "S311"]

[tool.ruff.lint.isort]
known-first-party = ["heare_memory"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_subprocess_popen_with_shell_equals_true

[tool.autoflake]
check = false
in-place = true
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
ignore-init-module-imports = true

[dependency-groups]
dev = [
    "autoflake>=2.3.1",
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.11.13",
]
